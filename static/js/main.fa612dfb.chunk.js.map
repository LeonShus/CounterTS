{"version":3,"sources":["Components/Counter/CounterComponent.module.css","Components/SettingsForCounter/SettingsForCounter.module.css","App.module.css","Components/DefaultComponent/Button.tsx","Components/Counter/CounterComponent.tsx","Components/SettingsForCounter/SettingsForCounter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","name","callback","disabled","style","className","onClick","CounterComponent","counter","incCounter","resetCounter","maxCounter","minCounter","props","useEffect","setCounter","disableFunc","n","maxCounterStyle","classes","maxVal","container","btnCont","btn","setSettingsVisible","SettingsForCounter","setMaxCounter","setMinCounter","classesSet","settCont","inputsCont","type","value","onChange","e","minNum","parseInt","currentTarget","maxNum","btnSet","App","useState","settingsVisible","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa612dfb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CounterComponent_container__3DGqC\",\"counter\":\"CounterComponent_counter__3RXxq\",\"btnCont\":\"CounterComponent_btnCont__3fnnQ\",\"btn\":\"CounterComponent_btn__1gJay\",\"maxVal\":\"CounterComponent_maxVal__3jsCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnSet\":\"SettingsForCounter_btnSet__1HefR\",\"inputsCont\":\"SettingsForCounter_inputsCont___-HaN\",\"settCont\":\"SettingsForCounter_settCont__3Fzri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__28Dny\"};","import React from \"react\"\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    callback: () => void\r\n    disabled?: boolean\r\n    style: string\r\n}\r\n\r\nexport const Button = ({name, callback, disabled, style}: ButtonType) => {\r\n    return (\r\n        <button className={style} disabled={disabled} onClick={callback}>{name}</button>\r\n    )\r\n}","import React, {useEffect} from \"react\"\r\nimport classes from \"./CounterComponent.module.css\"\r\nimport {Button} from \"../DefaultComponent/Button\";\r\n\r\ntype CounterComponentType = {\r\n    counter: number\r\n    incCounter: () => void\r\n    resetCounter: () => void\r\n    maxCounter: number\r\n    minCounter: number\r\n    setCounter: (e: number) => void\r\n    setSettingsVisible: (e: boolean) => void\r\n}\r\n\r\nexport const CounterComponent = ({\r\n                                     counter, incCounter, resetCounter,\r\n                                     maxCounter, minCounter, ...props\r\n                                 }: CounterComponentType) => {\r\n\r\n    //Проверка на валидный counter\r\n    useEffect(() => {\r\n        counter > maxCounter &&\r\n        props.setCounter(maxCounter)\r\n\r\n        counter < minCounter &&\r\n        props.setCounter(minCounter)\r\n\r\n    }, [maxCounter, minCounter])\r\n\r\n    const disableFunc = (n: number) => counter === n\r\n\r\n    //Стиль maxCounter\r\n    const maxCounterStyle = counter >= maxCounter ? classes.maxVal : \"\"\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={`${maxCounterStyle} ${classes.counter}`}>\r\n                {counter}\r\n            </div>\r\n            <div className={classes.btnCont}>\r\n                <Button style={classes.btn} disabled={disableFunc(maxCounter)} callback={incCounter} name={\"Inc\"}/>\r\n                <Button style={classes.btn} disabled={disableFunc(minCounter)} callback={resetCounter} name={\"Reset\"}/>\r\n                <Button style={classes.btn} callback={() => props.setSettingsVisible(true)} name={\"Set\"}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\"\r\nimport classes from \"../Counter/CounterComponent.module.css\"\r\nimport classesSet from \"./SettingsForCounter.module.css\"\r\nimport {Button} from \"../DefaultComponent/Button\";\r\n\r\ntype SettingsForCounterPropsType = {\r\n    maxCounter: number\r\n    minCounter: number\r\n    setMaxCounter: (e: number) => void\r\n    setMinCounter: (e: number) => void\r\n    setSettingsVisible: (e: boolean) => void\r\n}\r\n\r\nexport const SettingsForCounter = ({\r\n                                       maxCounter,\r\n                                       minCounter,\r\n                                       setMaxCounter,\r\n                                       setMinCounter,\r\n                                       ...props\r\n                                   }: SettingsForCounterPropsType) => {\r\n\r\n    //Проверяем и сетаем max\r\n    const inpMaxHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const maxNum = parseInt(e.currentTarget.value)\r\n\r\n        maxNum > minCounter &&\r\n        setMaxCounter(maxNum)\r\n    }\r\n\r\n    //Проверяем и сетаем min\r\n    const inpMinHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const minNum = parseInt(e.currentTarget.value)\r\n\r\n        minNum < maxCounter && minNum >= 0 &&\r\n        setMinCounter(minNum)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={` ${classesSet.settCont} ${classesSet.inputsCont}`}>\r\n                Min\r\n                <input type=\"number\"\r\n                       value={minCounter}\r\n                       onChange={inpMinHandler}\r\n                />\r\n                Max\r\n                <input type=\"number\"\r\n                       value={maxCounter}\r\n                       onChange={inpMaxHandler}\r\n                />\r\n            </div>\r\n            <div className={`${classes.btnCont} ${classesSet.btnSet}`}>\r\n                <Button style={classes.btn} callback={() => props.setSettingsVisible(false)} name={\"Save\"}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\nimport classes from \"./App.module.css\"\nimport {CounterComponent} from \"./Components/Counter/CounterComponent\";\nimport {SettingsForCounter} from \"./Components/SettingsForCounter/SettingsForCounter\";\n\nfunction App() {\n\n    const [settingsVisible, setSettingsVisible] = useState<boolean>(false)\n    const [maxCounter, setMaxCounter] = useState<number>(5)\n    const [minCounter, setMinCounter] = useState<number>(1)\n\n    const [counter, setCounter] = useState<number>(minCounter)\n\n\n    const incCounter = () => {\n        if (counter < maxCounter) {\n            setCounter(counter + 1)\n        }\n    }\n    const resetCounter = () => {\n        setCounter(minCounter)\n    }\n\n    return (\n        <div className={classes.container}>\n            {!settingsVisible &&\n            <CounterComponent counter={counter}\n                              incCounter={incCounter}\n                              resetCounter={resetCounter}\n                              maxCounter={maxCounter}\n                              minCounter={minCounter}\n                              setCounter={setCounter}\n                              setSettingsVisible={setSettingsVisible}\n            />}\n\n\n            {settingsVisible &&\n            <SettingsForCounter maxCounter={maxCounter}\n                                minCounter={minCounter}\n                                setMaxCounter={setMaxCounter}\n                                setMinCounter={setMinCounter}\n                                setSettingsVisible={setSettingsVisible}\n            />}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}